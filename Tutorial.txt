1: dar o comando: npm init -y pra criar package.json

2: dar o comando:  npm install next react react-dom

3: inserir scripts : "dev": "next",
    "start":"next start",
    "build": "next build"

4:criar o .gitIgnore e colocar o node_modules dentro

5: Em pages criei o About.js que é página sobre da app

6: Criamos uma page contact.js e nela adicionaomos a func component padrão 

7: criamos a page search.js com a func component padrão

8:Instalar o TailwindCSS: seguindo a documentação pra next: https://tailwindcss.com/docs/guides/nextjs

9: Criei em pages _app.js configurando pra ser chamado em todas as pages usando props e spread operators assim o conteúdo de _app aparecerar em todas as páginas

10: dando o import: import '../css/styles.css' na page _app.js todas as páginas carregarão o TailwindCSS

11: Testanto o response design. Na documentação do tailwindcss mostra  a faixa de pixels pra a mudança de layout de acordo com o tamanho da tela,
mostra a legenda dos padding p1,p-2 e etc pode converter rem em pixel no google pr ter uma noção, pesquinsamos tambem no tailwind container tambem tem sua legenda sm, md, lg, xl,2xl com seus determinados tamanhos em pixels

12: inserir na diva principal de _app.js :
<div className='container mx-auto'> pra centralizar a tela apenas na <div> titulo e nos <Component/> 

13: Na raiz do projeto criar a pasta component/header/index.js  criei o componete Header tranferir as <div> correpondente ao header depois importei o component de volta ao _app.js

14: Outra opção de aplicar o css é como usar no React criando um arquivo module.css na pasta do componente e chamando ele com:
 import styles from './' e na tag : <div className={styles.nomeClasse}>
desse jeito tambem é possivel combinar tailwindcss  global com css local concatenando:  <div className={'p-4'+styles. nomeClasse}>   
